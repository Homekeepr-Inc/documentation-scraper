services:
  db-init:
    build: .
    platform: linux/amd64
    env_file:
      - .env
    volumes:
      - ./data:/app/data
    command: ["python", "scripts/init_db.py"]
    networks:
      - app_network

  app:
    build: .
    platform: linux/amd64
    env_file:
      - .env
    environment:
      - PROXY_URL=http://squid:8888  # Point to Squid (unauthenticated locally)
    volumes:
      - ./data:/app/data
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app_network
    depends_on:
      db-init:
        condition: service_completed_successfully
      squid:  # Ensure Squid starts first
        condition: service_started
    deploy:
      replicas: 4  # Scale to multiple instances for parallelism

  squid:
    build: ./squid
    env_file:
      - .env
    networks:
      - app_network
    # No ports exposed externally (internal only)

  caddy:
     image: caddy:2
     environment:
       - DOMAIN_NAME=${DOMAIN_NAME:-api.homekeepr.co}
       - TLS_DIRECTIVE=${TLS_DIRECTIVE:-tls /etc/caddy/cert.pem /etc/caddy/key.pem}
     working_dir: /etc/caddy
     ports:
       - "443:443"
     volumes:
       - ./caddy:/etc/caddy
     networks:
       - app_network
     depends_on:
       app:
         condition: service_healthy

networks:
  app_network:
    driver: bridge
